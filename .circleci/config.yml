version: 2.1
orbs:
  slack: circleci/slack@4.15.0
  ms-teams: cloudradar-monitoring/ms-teams@0.0.1
  kubernetes: circleci/kubernetes@1.3.1
jobs:
  ensure_formatting:
    docker:
      - image: cimg/python:3.13
    working_directory: ~/repo
    steps:
      - checkout
      - run: sudo apt-get update -qq && sudo apt install curl gettext-base
      - run:
          name: install dependencies
          command: pip install black isort --user
      - run:
          name: confirm black version
          command: black --version
      - run:
          name: run isort check
          command: isort --profile black --check .
      - run:
          name: run black check
          command: black --check .
      - slack/notify:
          event: fail
          template: basic_fail_1
      - ms-teams/report:
          only_on_fail: true
          webhook_url: $MS_TEAMS_WEBHOOK_URL
  linter:
    docker:
      - image: alpine/flake8
    working_directory: ~/repo
    steps:
      - checkout
      - run: apk update && apk upgrade && apk --no-cache add curl gettext
      - run:
          name: flake8
          command: flake8 --ignore=E,W ~/repo
      - slack/notify:
          event: fail
          template: basic_fail_1
      - ms-teams/report:
          only_on_fail: true
          webhook_url: $MS_TEAMS_WEBHOOK_URL
  test:
    working_directory: ~/openbas
    docker:
      - image: cimg/python:3.13
    steps:
      - checkout
      - setup_remote_docker
      - run:
          working_directory: ~/openbas/crowdstrike
          name: Install dependencies for crowdstrike collector
          command: pip install -r requirements.txt
      - run:
          working_directory: ~/openbas/crowdstrike
          name: Tests for crowdstrike collector
          command: python -m unittest
  build_1:
    working_directory: ~/openbas
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run: sudo apt-get update -qq && sudo apt install curl gettext-base
      - run:
          working_directory: ~/openbas/mitre-attack
          name: Build Docker image openbas/collector-mitre-attack
          command: |
            LATEST_VERSION=$(git describe --tags --abbrev=0)
            TAGS="openbas/collector-mitre-attack:${CIRCLE_TAG}"
            [ "$CIRCLE_TAG" = "$LATEST_VERSION" ] && TAGS="$TAGS openbas/collector-mitre-attack:latest"
            docker build --progress=plain -t openbas/collector-mitre-attack:latest . && docker tag $TAGS
      - run:
          working_directory: ~/openbas/microsoft-entra
          name: Build Docker image openbas/collector-microsoft-entra
          command: |
            LATEST_VERSION=$(git describe --tags --abbrev=0)
            TAGS="openbas/collector-microsoft-entra:${CIRCLE_TAG}"
            [ "$CIRCLE_TAG" = "$LATEST_VERSION" ] && TAGS="$TAGS openbas/collector-microsoft-entra:latest"
            docker build --progress=plain -t openbas/collector-microsoft-entra:latest . && docker tag $TAGS
      - run:
          working_directory: ~/openbas/tanium-threat-response
          name: Build Docker image openbas/collector-tanium-threat-response
          command: |
            LATEST_VERSION=$(git describe --tags --abbrev=0)
            TAGS="openbas/collector-tanium-threat-response:${CIRCLE_TAG}"
            [ "$CIRCLE_TAG" = "$LATEST_VERSION" ] && TAGS="$TAGS openbas/collector-tanium-threat-response:latest"
            docker build --progress=plain -t openbas/collector-tanium-threat-response:latest . && docker tag $TAGS
      - run:
          working_directory: ~/openbas/microsoft-defender
          name: Build Docker image openbas/collector-microsoft-defender
          command: |
            LATEST_VERSION=$(git describe --tags --abbrev=0)
            TAGS="openbas/collector-microsoft-defender:${CIRCLE_TAG}"
            [ "$CIRCLE_TAG" = "$LATEST_VERSION" ] && TAGS="$TAGS openbas/collector-microsoft-defender:latest"
            docker build --progress=plain -t openbas/collector-microsoft-defender:latest . && docker tag $TAGS
      - run:
          working_directory: ~/openbas/microsoft-sentinel
          name: Build Docker image openbas/collector-microsoft-sentinel
          command: |
            LATEST_VERSION=$(git describe --tags --abbrev=0)
            TAGS="openbas/collector-microsoft-sentinel:${CIRCLE_TAG}"
            [ "$CIRCLE_TAG" = "$LATEST_VERSION" ] && TAGS="$TAGS openbas/collector-microsoft-sentinel:latest"
            docker build --progress=plain -t openbas/collector-microsoft-sentinel:latest . && docker tag $TAGS
      - run:
          working_directory: ~/openbas/atomic-red-team
          name: Build Docker image openbas/collector-atomic-red-team
          command: |
            LATEST_VERSION=$(git describe --tags --abbrev=0)
            TAGS="openbas/collector-atomic-red-team:${CIRCLE_TAG}"
            [ "$CIRCLE_TAG" = "$LATEST_VERSION" ] && TAGS="$TAGS openbas/collector-atomic-red-team:latest"
            docker build --progress=plain -t openbas/collector-atomic-red-team:latest . && docker tag $TAGS
      - run:
          working_directory: ~/openbas/crowdstrike
          name: Build Docker image openbas/collector-crowdstrike
          command: docker build -t openbas/collector-crowdstrike:latest . && docker tag openbas/collector-crowdstrike:latest openbas/collector-crowdstrike:${CIRCLE_TAG}
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            LATEST_VERSION=$(git describe --tags --abbrev=0)
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            [ "$CIRCLE_TAG" = "$LATEST_VERSION" ] && docker push openbas/collector-mitre-attack:latest
            docker push openbas/collector-mitre-attack:${CIRCLE_TAG}
            [ "$CIRCLE_TAG" = "$LATEST_VERSION" ] && docker push openbas/collector-microsoft-entra:latest
            docker push openbas/collector-microsoft-entra:${CIRCLE_TAG}
            [ "$CIRCLE_TAG" = "$LATEST_VERSION" ] && docker push openbas/collector-tanium-threat-response:latest
            docker push openbas/collector-tanium-threat-response:${CIRCLE_TAG}
            [ "$CIRCLE_TAG" = "$LATEST_VERSION" ] && docker push openbas/collector-microsoft-defender:latest
            docker push openbas/collector-microsoft-defender:${CIRCLE_TAG}
            [ "$CIRCLE_TAG" = "$LATEST_VERSION" ] && docker push openbas/collector-microsoft-sentinel:latest
            docker push openbas/collector-microsoft-sentinel:${CIRCLE_TAG}
            [ "$CIRCLE_TAG" = "$LATEST_VERSION" ] && docker push openbas/collector-atomic-red-team:latest
            docker push openbas/collector-atomic-red-team:${CIRCLE_TAG}
            docker push openbas/collector-crowdstrike:latest
            docker push openbas/collector-crowdstrike:${CIRCLE_TAG}
      - slack/notify:
          event: fail
          template: basic_fail_1
      - ms-teams/report:
          only_on_fail: true
          webhook_url: $MS_TEAMS_WEBHOOK_URL
  build_rolling_1:
    working_directory: ~/openbas
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run: sudo apt-get update -qq && sudo apt install curl gettext-base
      - run:
         working_directory: ~/openbas
         name: Replace pyobas requirement of stable version with latest main branch code
         command: find . -name requirements.txt -exec sed 's|^pyobas==.*$|pyobas @ git+https://github.com/OpenBAS-Platform/client-python@main|' -i {} \;
      - run:
          working_directory: ~/openbas/mitre-attack
          name: Build Docker image openbas/collector-mitre-attack
          command: docker build --progress=plain -t openbas/collector-mitre-attack:rolling .
      - run:
          working_directory: ~/openbas/microsoft-entra
          name: Build Docker image openbas/collector-microsoft-entra
          command: docker build --progress=plain -t openbas/collector-microsoft-entra:rolling .
      - run:
          working_directory: ~/openbas/tanium-threat-response
          name: Build Docker image openbas/collector-tanium-threat-response
          command: docker build --progress=plain -t openbas/collector-tanium-threat-response:rolling .
      - run:
          working_directory: ~/openbas/microsoft-defender
          name: Build Docker image openbas/collector-microsoft-defender
          command: docker build --progress=plain -t openbas/collector-microsoft-defender:rolling .
      - run:
          working_directory: ~/openbas/microsoft-sentinel
          name: Build Docker image openbas/collector-microsoft-sentinel
          command: docker build --progress=plain -t openbas/collector-microsoft-sentinel:rolling .
      - run:
          working_directory: ~/openbas/atomic-red-team
          name: Build Docker image openbas/collector-atomic-red-team
          command: docker build --progress=plain -t openbas/collector-atomic-red-team:rolling .
      - run:
          working_directory: ~/openbas/crowdstrike
          name: Build Docker image openbas/collector-crowdstrike
          command: docker build -t openbas/collector-crowdstrike:rolling .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push openbas/collector-mitre-attack:rolling
            docker push openbas/collector-microsoft-entra:rolling
            docker push openbas/collector-tanium-threat-response:rolling
            docker push openbas/collector-microsoft-defender:rolling
            docker push openbas/collector-microsoft-sentinel:rolling
            docker push openbas/collector-atomic-red-team:rolling
            docker push openbas/collector-crowdstrike:rolling
      - slack/notify:
          event: fail
          template: basic_fail_1
      - ms-teams/report:
          only_on_fail: true
          webhook_url: $MS_TEAMS_WEBHOOK_URL
  build_prerelease_1:
    working_directory: ~/openbas
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run: sudo apt-get update -qq && sudo apt install curl gettext-base
      - run:
         working_directory: ~/openbas
         name: Replace pyobas requirement of stable version with latest release branch code
         # We safely expand the CIRCLE_BRANCH variable because the CircleCI filters already enforce a strict release/x.x.x pattern using regex
         command: find . -name requirements.txt -exec sed "s|^pyobas==.*$|pyobas @ git+https://github.com/OpenBAS-Platform/client-python@${CIRCLE_BRANCH}|" -i {} \;
      - run:
          working_directory: ~/openbas/mitre-attack
          name: Build Docker image openbas/collector-mitre-attack
          command: docker build --progress=plain -t openbas/collector-mitre-attack:prerelease .
      - run:
          working_directory: ~/openbas/microsoft-entra
          name: Build Docker image openbas/collector-microsoft-entra
          command: docker build --progress=plain -t openbas/collector-microsoft-entra:prerelease .
      - run:
          working_directory: ~/openbas/tanium-threat-response
          name: Build Docker image openbas/collector-tanium-threat-response
          command: docker build --progress=plain -t openbas/collector-tanium-threat-response:prerelease .
      - run:
          working_directory: ~/openbas/microsoft-defender
          name: Build Docker image openbas/collector-microsoft-defender
          command: docker build --progress=plain -t openbas/collector-microsoft-defender:prerelease .
      - run:
          working_directory: ~/openbas/microsoft-sentinel
          name: Build Docker image openbas/collector-microsoft-sentinel
          command: docker build --progress=plain -t openbas/collector-microsoft-sentinel:prerelease .
      - run:
          working_directory: ~/openbas/atomic-red-team
          name: Build Docker image openbas/collector-atomic-red-team
          command: docker build --progress=plain -t openbas/collector-atomic-red-team:prerelease .
      - run:
          working_directory: ~/openbas/crowdstrike
          name: Build Docker image openbas/collector-crowdstrike
          command: docker build --progress=plain -t openbas/collector-crowdstrike:prerelease .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push openbas/collector-mitre-attack:prerelease
            docker push openbas/collector-microsoft-entra:prerelease
            docker push openbas/collector-tanium-threat-response:prerelease
            docker push openbas/collector-microsoft-defender:prerelease
            docker push openbas/collector-microsoft-sentinel:prerelease
            docker push openbas/collector-atomic-red-team:prerelease
            docker push openbas/collector-crowdstrike:prerelease
      - slack/notify:
          event: fail
          template: basic_fail_1
      - ms-teams/report:
          only_on_fail: true
          webhook_url: $MS_TEAMS_WEBHOOK_URL
  deploy_testing:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - kubernetes/install-kubectl
      - run: kubectl --server=https://api.staging.eu-west.filigran.io --token=$K8S_TOKEN -n customer-testing rollout restart deployment -l app=collector
  deploy_prerelease:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - kubernetes/install-kubectl
      - run: kubectl --server=https://api.staging.eu-west.filigran.io --token=$K8S_TOKEN_PRE_RELEASE -n customer-prerelease-obas rollout restart deployment -l app=collector
  notify_rolling:
    docker:
      - image: "cimg/base:stable"
    steps:
      - run: sudo apt-get update -qq && sudo apt install curl gettext-base
      - slack/notify:
          event: pass
          template: basic_success_1
      - ms-teams/report:
          only_on_fail: false
          webhook_url: $MS_TEAMS_WEBHOOK_URL
  notify:
    docker:
      - image: "cimg/base:stable"
    steps:
      - run: sudo apt-get update -qq && sudo apt install curl gettext-base
      - slack/notify:
          event: pass
          template: basic_success_1
      - ms-teams/report:
          only_on_fail: false
          webhook_url: $MS_TEAMS_WEBHOOK_URL
workflows:
  version: 2
  openbas:
    jobs:
      - ensure_formatting
      - linter
      - test
      - build_1:
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)+(\.[0-9]+)*/
            branches:
              ignore: /.*/
      - build_rolling_1:
          requires:
            - ensure_formatting
            - linter
          filters:
            branches:
              only:
                - main
      - build_prerelease_1:
          requires:
            - ensure_formatting
            - linter
          filters:
            branches:
              only:
                - /^release\/\d+\.\d+\.\d+$/
      - deploy_testing:
          requires:
            - build_rolling_1
      - deploy_prerelease:
          requires:
            - build_prerelease_1
      - notify_rolling:
          requires:
            - deploy_testing
            - deploy_prerelease
      - notify:
          requires:
            - build_1
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)+(\.[0-9]+)*/
            branches:
              ignore: /.*/
