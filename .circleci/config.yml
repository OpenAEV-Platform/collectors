version: 2.1
orbs:
  slack: circleci/slack@4.13.2
  ms-teams: cloudradar-monitoring/ms-teams@0.0.1
jobs:
  ensure_formatting:
    docker:
      - image: cimg/python:3.11
    working_directory: ~/repo
    steps:
      - checkout
      - run: sudo apt-get update -qq && sudo apt install curl gettext-base
      - run:
          name: install dependencies
          command: pip install black isort --user
      - run:
          name: confirm black version
          command: black --version
      - run:
          name: run isort check
          command: isort --profile black --check .
      - run:
          name: run black check
          command: black --check .
      - slack/notify:
          event: fail
          template: basic_fail_1
      - ms-teams/report:
          only_on_fail: true
          webhook_url: $MS_TEAMS_WEBHOOK_URL
  linter:
    docker:
      - image: alpine/flake8
    working_directory: ~/repo
    steps:
      - checkout
      - run: apk update && apk upgrade && apk --no-cache add curl gettext
      - run:
          name: flake8
          command: flake8 --ignore=E,W ~/repo
      - slack/notify:
          event: fail
          template: basic_fail_1
      - ms-teams/report:
          only_on_fail: true
          webhook_url: $MS_TEAMS_WEBHOOK_URL
  build_1:
    working_directory: ~/openbas
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run: sudo apt-get update -qq && sudo apt install curl gettext-base
      - run:
          working_directory: ~/openbas/mitre-attack
          name: Build Docker image openbas/collector-mitre-attack
          command: docker build -t openbas/collector-mitre-attack:latest . && docker tag openbas/collector-mitre-attack:latest openbas/collector-mitre-attack:${CIRCLE_TAG}
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push openbas/collector-mitre-attack:latest
            docker push openbas/collector-mitre-attack:${CIRCLE_TAG}
      - slack/notify:
          event: fail
          template: basic_fail_1
      - ms-teams/report:
          only_on_fail: true
          webhook_url: $MS_TEAMS_WEBHOOK_URL
  build_2:
    working_directory: ~/openbas
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run: sudo apt-get update -qq && sudo apt install curl gettext-base
      - run:
          working_directory: ~/openbas/microsoft-sentinel
          name: Build Docker image openbas/collector-microsoft-sentinel
          command: docker build -t openbas/collector-microsoft-sentinel:latest . && docker tag openbas/collector-microsoft-sentinel:latest openbas/collector-microsoft-sentinel:${CIRCLE_TAG}
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push openbas/collector-microsoft-sentinel:latest
            docker push openbas/collector-microsoft-sentinel:${CIRCLE_TAG}
      - slack/notify:
          event: fail
          template: basic_fail_1
      - ms-teams/report:
          only_on_fail: true
          webhook_url: $MS_TEAMS_WEBHOOK_URL
  build_rolling_1:
    working_directory: ~/openbas
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run: sudo apt-get update -qq && sudo apt install curl gettext-base
      - run:
          working_directory: ~/openbas/mitre-attack
          name: Build Docker image openbas/collector-mitre-attack
          command: docker build -t openbas/collector-mitre-attack:rolling .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push openbas/collector-mitre-attack:rolling
      - slack/notify:
          event: fail
          template: basic_fail_1
      - ms-teams/report:
          only_on_fail: true
          webhook_url: $MS_TEAMS_WEBHOOK_URL
  build_rolling_2:
    working_directory: ~/openbas
    docker:
      - image: cimg/base:stable-20.04
    steps:
      - checkout
      - setup_remote_docker
      - run: sudo apt-get update -qq && sudo apt install curl gettext-base
      - run:
          working_directory: ~/openbas/microsoft-sentinel
          name: Build Docker image openbas/collector-microsoft-sentinel
          command: docker build -t openbas/collector-microsoft-sentinel:rolling .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push openbas/collector-microsoft-sentinel:rolling
      - slack/notify:
          event: fail
          template: basic_fail_1
      - ms-teams/report:
          only_on_fail: true
          webhook_url: $MS_TEAMS_WEBHOOK_URL
  notify_rolling:
    docker:
      - image: "cimg/base:stable"
    steps:
      - run: sudo apt-get update -qq && sudo apt install curl gettext-base
      - slack/notify:
          event: pass
          template: basic_success_1
      - ms-teams/report:
          only_on_fail: false
          webhook_url: $MS_TEAMS_WEBHOOK_URL
  notify:
    docker:
      - image: "cimg/base:stable"
    steps:
      - run: sudo apt-get update -qq && sudo apt install curl gettext-base
      - slack/notify:
          event: pass
          template: basic_success_1
      - ms-teams/report:
          only_on_fail: false
          webhook_url: $MS_TEAMS_WEBHOOK_URL
workflows:
  version: 2
  openbas:
    jobs:
      - ensure_formatting
      - linter
      - build_1:
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)+(\.[0-9]+)*/
            branches:
              ignore: /.*/
      - build_2:
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)+(\.[0-9]+)*/
            branches:
              ignore: /.*/
      - build_rolling_1:
          requires:
            - ensure_formatting
            - linter
          filters:
            branches:
              only:
                - main
      - build_rolling_2:
          requires:
            - ensure_formatting
            - linter
          filters:
            branches:
              only:
                - main
      - notify_rolling:
          requires:
            - build_rolling_1
            - build_rolling_2
      - notify:
          requires:
            - build_1
            - build_2
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)+(\.[0-9]+)*/
            branches:
              ignore: /.*/
